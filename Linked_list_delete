#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

struct Node
{
    int data;
    struct Node *next;
}*head;

void push (struct Node** head);
void printList (struct Node* head);
void deleteNode(struct Node** head, int key);

int main()
{
    int n,num;
    char a;
    struct Node *head = NULL;
    printf("Enter the number of nodes data in reverse order: ");
    scanf("%d",&n);
    while(n>0)
    {
        push(&head);
        --n;
    }
    printf("The list looks like this: ");
    printList(head);
    printf("\nDo you want any number in the list? ");
    scanf(" %c\n",&a);
    printf("%c",a);
    if(a == 'y' || a == 'Y')
    {
        printf("Enter the number you want to delete: ");
        scanf("%d",&num);
        deleteNode(&head,num);
        printf("\nThe list looks like this after deletion : ");
        printList(head);
    }
    else
    {
        printf("The list stays the same: ");
        printList(head);
    }
    return 0; 
}

void push (struct Node** head)
{
    struct Node *new_head = (struct Node*)malloc(sizeof(struct Node));
    int num;
    if(new_head == NULL)
        printf("Sorry no memory allocated ");
    else
    {
        printf("Enter the node data: ");
        scanf("%d",&num);
        new_head->data = num;
        new_head->next = (*head);
        (*head) = new_head;
    }
}

void deleteNode(struct Node** head, int key)
{
    struct Node *temp = *head,*prev;
    if(temp != NULL && temp->data == key)
    {
        *head = temp->next;
        free(temp);
        return;
    }
    while(temp != NULL && temp->data != key)
    {
        prev = temp;
        temp = temp->next;
    }
    prev->next = temp->next;
    free(temp);
}

void printList (struct Node* head)
{
    int len=0;
    while(head != NULL)
    {
        printf("%d ",head->data);
        head = head->next;
        len++;
    }
    printf("\nThe length of the list is %d",len);
}
